import{_ as e,c as a,o,a4 as t}from"./chunks/framework.Bkp5Egd4.js";const u=JSON.parse('{"title":"盒模型","description":"","frontmatter":{},"headers":[],"relativePath":"css/盒子模型.md","filePath":"css/盒子模型.md","lastUpdated":null}'),s={name:"css/盒子模型.md"},r=t('<h1 id="盒模型" tabindex="-1">盒模型 <a class="header-anchor" href="#盒模型" aria-label="Permalink to &quot;盒模型&quot;">​</a></h1><blockquote><p>CSS 盒模型整体上适用于区块盒子，它定义了盒子的不同部分（外边距、边框、内边距和内容）如何协同工作，以创建一个在页面上可以看到的盒子。<br> 行内盒子使用的只是盒模型中定义的部分行为。</p></blockquote><h2 id="一、css标准盒模型" tabindex="-1">一、CSS标准盒模型 <a class="header-anchor" href="#一、css标准盒模型" aria-label="Permalink to &quot;一、CSS标准盒模型&quot;">​</a></h2><p>默认：<strong>box-sizing: content-box</strong></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>外边距不计入盒子的实际大小——当然，它影响盒子在页面上所占的总空间，但只影响盒子外的空间。盒子的面积止于边框，不会延伸到外边距中。</p></div><h2 id="二、css替代盒模型-ie盒模型" tabindex="-1">二、CSS替代盒模型(IE盒模型) <a class="header-anchor" href="#二、css替代盒模型-ie盒模型" aria-label="Permalink to &quot;二、CSS替代盒模型(IE盒模型)&quot;">​</a></h2><p>要为某个元素使用替代模型，可对其设置 <strong>box-sizing: border-box</strong></p><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ol><li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/The_box_model" target="_blank" rel="noreferrer">盒模型</a></li></ol>',9),l=[r];function c(i,n,_,d,h,p){return o(),a("div",null,l)}const m=e(s,[["render",c]]);export{u as __pageData,m as default};
