import{_ as e,c as t,o as a,a4 as r}from"./chunks/framework.Bkp5Egd4.js";const m=JSON.parse('{"title":"vue-router实现原理","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue-router实现原理.md","filePath":"vue/vue-router实现原理.md","lastUpdated":null}'),o={name:"vue/vue-router实现原理.md"},u=r('<h1 id="vue-router实现原理" tabindex="-1">vue-router实现原理 <a class="header-anchor" href="#vue-router实现原理" aria-label="Permalink to &quot;vue-router实现原理&quot;">​</a></h1><h2 id="hash模式" tabindex="-1">hash模式 <a class="header-anchor" href="#hash模式" aria-label="Permalink to &quot;hash模式&quot;">​</a></h2><blockquote><p>通过<code>onhashchange()</code>事件监听hash值变化，页面hash值发生变化后，<code>window</code>可以监听到事件改变。hash值变化对应的URL被记录下来，实现浏览器历史页面的前进后退。</p></blockquote><h2 id="history模式" tabindex="-1">history模式 <a class="header-anchor" href="#history模式" aria-label="Permalink to &quot;history模式&quot;">​</a></h2><blockquote><p>使用<code>HTML5 history</code>提供的pushState, replaceState API，用于浏览器历史浏览栈，修改URL时不会触发刷新</p></blockquote><h2 id="router和route的区别" tabindex="-1">router和route的区别 <a class="header-anchor" href="#router和route的区别" aria-label="Permalink to &quot;router和route的区别&quot;">​</a></h2><ul><li>router是路由实例，包含了路由跳转的方式，钩子函数。</li><li>route是路由信心，包含path, params, query, name等路由参数。</li></ul>',7),h=[u];function s(c,i,l,n,d,_){return a(),t("div",null,h)}const v=e(o,[["render",s]]);export{m as __pageData,v as default};
