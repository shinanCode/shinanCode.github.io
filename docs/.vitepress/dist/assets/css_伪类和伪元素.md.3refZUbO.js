import{_ as e,c as l,o as a,a4 as o}from"./chunks/framework.Bkp5Egd4.js";const b=JSON.parse('{"title":"伪类和伪元素","description":"","frontmatter":{},"headers":[],"relativePath":"css/伪类和伪元素.md","filePath":"css/伪类和伪元素.md","lastUpdated":null}'),t={name:"css/伪类和伪元素.md"},i=o('<h1 id="伪类和伪元素" tabindex="-1">伪类和伪元素 <a class="header-anchor" href="#伪类和伪元素" aria-label="Permalink to &quot;伪类和伪元素&quot;">​</a></h1><h2 id="伪类" tabindex="-1">伪类 <a class="header-anchor" href="#伪类" aria-label="Permalink to &quot;伪类&quot;">​</a></h2><blockquote><p>伪类是选择器的一种, 它用于选择处于特定状态的元素。</p></blockquote><div class="info custom-block"><p class="custom-block-title">INFO</p><p>伪类就是开头为冒号的关键字</p></div><ul><li>:first-child</li><li>:last-child</li><li>:only-child</li></ul><br><h4 id="用户行为伪类" tabindex="-1">用户行为伪类 <a class="header-anchor" href="#用户行为伪类" aria-label="Permalink to &quot;用户行为伪类&quot;">​</a></h4><blockquote><p>一些伪类只会在用户以某种方式和文档交互的时候应用。这些用户行为伪类，有时叫做动态伪类，表现得就像是一个类在用户和元素交互的时候加到了元素上一样</p></blockquote><ul><li>:hover</li><li>:focus</li><li>:active</li></ul><h2 id="伪元素" tabindex="-1">伪元素 <a class="header-anchor" href="#伪元素" aria-label="Permalink to &quot;伪元素&quot;">​</a></h2><blockquote><p>伪元素以类似方式表现，不过表现得是像你往标记文本中加入全新的 HTML 元素一样，而不是向现有的元素上应用类。</p></blockquote><div class="info custom-block"><p class="custom-block-title">INFO</p><p>伪元素开头为双冒号::</p><p>备注： 一些早期的伪元素曾使用单冒号的语法</p></div><ul><li>::first-line</li><li>::before</li><li>::after</li></ul><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ol><li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Selectors/Pseudo-classes_and_pseudo-elements" target="_blank" rel="noreferrer">伪类和伪元素</a></li></ol>',15),s=[i];function r(c,n,d,h,_,u){return a(),l("div",null,s)}const f=e(t,[["render",r]]);export{b as __pageData,f as default};
