import{_ as e,c as a,o as t,a4 as o}from"./chunks/framework.Bkp5Egd4.js";const u=JSON.parse('{"title":"性能优化","description":"","frontmatter":{},"headers":[],"relativePath":"js/性能优化.md","filePath":"js/性能优化.md","lastUpdated":null}'),l={name:"js/性能优化.md"},i=o('<h1 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to &quot;性能优化&quot;">​</a></h1><h2 id="什么是前端性能优化" tabindex="-1">什么是前端性能优化 <a class="header-anchor" href="#什么是前端性能优化" aria-label="Permalink to &quot;什么是前端性能优化&quot;">​</a></h2><blockquote><p>从用户开始访问网站到整个页面完整地展现出来的过程中，通过各种优化策略和优化方法，让页面加载得更快，让用户的操作相应更及时，给用户更好的使用体验。</p></blockquote><h2 id="前端性能优化方式" tabindex="-1">前端性能优化方式 <a class="header-anchor" href="#前端性能优化方式" aria-label="Permalink to &quot;前端性能优化方式&quot;">​</a></h2><p>1、性能优化指标和测量工具</p><blockquote><p>自建或者接入性能监测平台，自建通过<code>performance</code>，第三方使用<code>ARMS</code>或者<code>SLS</code>日志平台。</p></blockquote><p>2、传输和加载优化</p><ul><li>开启gzip</li><li>使用CDN</li><li>使用HTTP缓存</li><li>使用SSR服务器渲染</li></ul><p>3、资源优化</p><ul><li>压缩合并，减少请求数</li><li>图片加载使用懒加载</li><li>避免引起重绘回流</li></ul><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ol><li><a href="https://web.qianguyihao.com/14-%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/00-%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%AE%A4%E7%9F%A5.html#%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%AE%A4%E7%9F%A5" target="_blank" rel="noreferrer">前端性能优化认知</a></li></ol>',12),r=[i];function c(n,s,d,_,h,E){return t(),a("div",null,r)}const A=e(l,[["render",c]]);export{u as __pageData,A as default};
