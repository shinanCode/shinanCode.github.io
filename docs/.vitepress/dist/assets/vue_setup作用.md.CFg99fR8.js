import{_ as s,c as e,o as a,a4 as t}from"./chunks/framework.Bkp5Egd4.js";const _=JSON.parse('{"title":"setup作用","description":"","frontmatter":{},"headers":[],"relativePath":"vue/setup作用.md","filePath":"vue/setup作用.md","lastUpdated":null}'),i={name:"vue/setup作用.md"},n=t(`<h1 id="setup作用" tabindex="-1">setup作用 <a class="header-anchor" href="#setup作用" aria-label="Permalink to &quot;setup作用&quot;">​</a></h1><blockquote><p><code>scrtpt setup</code> 是 <code>vue3</code> 的语法糖，简化了<code>组合式 API</code> 的写法，并且运行性能更好。</p></blockquote><h2 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h2><ul><li>属性和方法无需返回，可以直接使用。</li><li>引入组件的时候，会自动注册，无需通过 <code>components</code> 手动注册。</li><li>使用 <code>defineProps</code> 接收父组件传递的值</li><li><code>useAttrs</code> 获取属性，<code>useSlots </code> 获取插槽，<code>defineEmits</code> 获取自定义事件。</li></ul><h3 id="获取组件实例" tabindex="-1">获取组件实例 <a class="header-anchor" href="#获取组件实例" aria-label="Permalink to &quot;获取组件实例&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { getCurrentInstance } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> instance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getCurrentInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div>`,6),l=[n];function o(p,c,d,h,r,k){return a(),e("div",null,l)}const g=s(i,[["render",o]]);export{_ as __pageData,g as default};
